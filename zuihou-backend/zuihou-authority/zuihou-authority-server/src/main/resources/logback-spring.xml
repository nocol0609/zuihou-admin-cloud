<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--
       %m
       输出代码中指定的消息
       %p
       输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
       %r
       输出自应用启动到输出该log信息耗费的毫秒数
       %c
       输出所属的类目，通常就是所在类的全名
       %t
       输出产生该日志事件的线程名
       %n
       输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
       %d
       输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，
       输出类似：2002年10月18日 22：10：28，921
       %l
       输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
    -->
    <springProperty scope="context" name="log.path" source="logging.path"/>
    <springProperty scope="context" name="spring.application.name" source="spring.application.name"/>
    <springProperty scope="context" name="spring.profiles.active" source="spring.profiles.active"/>
    <springProperty scope="context" name="common-pattern" source="logging.common-pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS}:[%5p] [%t:%r] [%logger{50}.%M:%L] --> %msg%n"/>
    <springProperty scope="context" name="log.level.console" source="logging.level.console" defaultValue="INFO"/>
    <springProperty scope="context" name="log.level.rest" source="logging.level.rest" defaultValue="INFO"/>
    <springProperty scope="context" name="log.level.service" source="logging.level.service" defaultValue="INFO"/>
    <springProperty scope="context" name="log.level.sql" source="logging.level.sql" defaultValue="DEBUG"/>

    <contextName>${spring.application.name}-${spring.profiles.active}-logback</contextName>

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <jmxConfigurator/>

    <appender name="CONSOLE_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.console}</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}:[%5p] [%t:%r] [%cyan(%logger{50}).%M:%L] --> %highlight(%msg)%n
            </pattern>
        </encoder>
    </appender>

    <appender name="ROOT_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/root.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM}/root-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>128MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>
    <!-- 异步输出 -->
    <appender name="ASYNC_ROOT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ROOT_APPENDER"/>
    </appender>

    <appender name="SERVICE_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/biz.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM}/service-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>128MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_SERVICE_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="SERVICE_APPENDER"/>
    </appender>

    <appender name="CONTROLLER_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/controller.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM}/controller-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>128MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_CONTROLLER_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="CONTROLLER_APPENDER"/>
    </appender>

    <appender name="EXCEPTION_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/exception.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM}/exception-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>128MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_EXCEPTION_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="EXCEPTION_APPENDER"/>
    </appender>
    <appender name="SQL_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天一归档 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM}/sql-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <!-- 单个日志文件最多 100MB, 60天的日志周期，最大不能超过20GB -->
            <maxFileSize>128MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_SQL" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="SQL_APPENDER"/>
    </appender>
    <appender name="CONSOLE_SQL_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.sql}</level>
        </filter>
        <encoder>
            <pattern>${common-pattern}</pattern>
        </encoder>
    </appender>


    <springProfile name="docker">
        <root level="${log.level.console}">
            <appender-ref ref="ASYNC_ROOT"/>
        </root>
        <logger name="com.github.zuihou.commons.handler" additivity="true" level="ERROR">
            <appender-ref ref="ASYNC_EXCEPTION_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.controller" additivity="true" level="${log.level.impl}">
            <appender-ref ref="ASYNC_CONTROLLER_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.service" additivity="true" level="${log.level.service}">
            <appender-ref ref="ASYNC_SERVICE_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.dao" additivity="false" level="${log.level.sql}">
            <appender-ref ref="ASYNC_SQL"/>
        </logger>
    </springProfile>
    <springProfile name="prod">
        <root level="${log.level.console}">
            <appender-ref ref="ASYNC_ROOT"/>
        </root>
        <logger name="com.github.zuihou.commons.handler" additivity="true" level="ERROR">
            <appender-ref ref="ASYNC_EXCEPTION_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.controller" additivity="true" level="${log.level.impl}">
            <appender-ref ref="ASYNC_CONTROLLER_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.service" additivity="true" level="${log.level.service}">
            <appender-ref ref="ASYNC_SERVICE_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.dao" additivity="false" level="${log.level.sql}">
            <appender-ref ref="ASYNC_SQL"/>
        </logger>
    </springProfile>

    <springProfile name="dev">
        <root level="${log.level.console}">
            <appender-ref ref="CONSOLE_APPENDER"/>
            <appender-ref ref="ROOT_APPENDER"/>
        </root>
        <logger name="com.github.zuihou.commons.handler" additivity="true" level="ERROR">
            <appender-ref ref="EXCEPTION_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.controller" additivity="true" level="${log.level.impl}">
            <appender-ref ref="CONTROLLER_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.service" additivity="true" level="${log.level.service}">
            <appender-ref ref="SERVICE_APPENDER"/>
        </logger>
        <logger name="com.github.zuihou.authority.dao" additivity="false" level="${log.level.sql}">
            <appender-ref ref="CONSOLE_SQL_APPENDER"/>
        </logger>
    </springProfile>
</configuration>
